package edu.uga.cs.countryquiz;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import java.util.ArrayList;
import java.util.List;

/**
 * This class is facilitates storing and restoring quizzes
 */
public class QuizzesData {
    public static final String DEBUG_TAG = "QuizzesData";

    // this is a reference to our database; it is used later to run SQL commands
    private SQLiteDatabase db;
    private SQLiteOpenHelper countriesDbHelper;
    private static final String[] allColumns = {
            CountriesDBHelper.COUNTRIES_Quiz_ID,
            CountriesDBHelper.COUNTRIES_COLUMN_quizDate,
            CountriesDBHelper.COUNTRIES_COLUMN_quizResult
    };

    public QuizzesData( Context context ) {
        this.countriesDbHelper = CountriesDBHelper.getInstance( context );
    }

    // Open the database
    public void open() {
        db = countriesDbHelper.getWritableDatabase();
    }

    // Close the database
    public void close() {
        if( countriesDbHelper != null ) {
            countriesDbHelper.close();
        }
    }

    public boolean isDBOpen()
    {
        return db.isOpen();
    }

    // Retrieve all quizzes and return them as a List.
    // This is how we restore persistent objects stored as rows in the quizzes table in the database.
    // For each retrieved row, we create a new Quiz (Java POJO object) instance and add it to the list.
    public List<Quizzes> retrieveAllQuizzes() {
        ArrayList<Quizzes> quizzes = new ArrayList<>();
        Cursor cursor = null;
        int columnIndex;

        try {
            // Execute the select query and get the Cursor to iterate over the retrieved rows
            cursor = db.query( CountriesDBHelper.TABLE_Quiz, allColumns,
                    null, null, null, null, null );

            // collect all quizzes into a List
            if( cursor != null && cursor.getCount() > 0 ) {

                while( cursor.moveToNext() ) {

                    if( cursor.getColumnCount() == 3) {

                        // get all attribute values of the quiz
                        columnIndex = cursor.getColumnIndex( CountriesDBHelper.COUNTRIES_Quiz_ID );
                        long id = cursor.getLong( columnIndex );
                        columnIndex = cursor.getColumnIndex( CountriesDBHelper.COUNTRIES_COLUMN_quizDate );
                        String date = cursor.getString( columnIndex );
                        columnIndex = cursor.getColumnIndex( CountriesDBHelper.COUNTRIES_COLUMN_quizResult );
                        String result = cursor.getString( columnIndex );

                        // create a new Quiz object and set its state to the retrieved values
                        Quizzes quiz = new Quizzes( date, result);
                        quiz.setId(id); // set the id (the primary key) of this object
                        // add it to the list
                        quizzes.add( quiz );
                    }
                }
            }
        }
        catch( Exception e ){
            Log.d( DEBUG_TAG, "Exception caught: " + e );
        }
        finally{
            // we should close the cursor
            if (cursor != null) {
                cursor.close();
            }
        }
        // return a list of quizzes
        return quizzes;
    }

    // Store a new job lead in the database.
    public Quizzes storeQuiz( Quizzes quiz ) {
        db = countriesDbHelper.getWritableDatabase();

        // Prepare the values for all of the necessary columns in the table
        // and set their values to the variables of the Quizzes argument.
        // This is how we are providing persistence to a Quiz (Java object) instance
        // by storing it as a new row in the database table representing quizzes.
        ContentValues values = new ContentValues();
        values.put( CountriesDBHelper.COUNTRIES_COLUMN_quizDate, quiz.getDate());
        values.put( CountriesDBHelper.COUNTRIES_COLUMN_quizResult, quiz.getResult());

        // Insert the new row into the database table;
        // The id (primary key) is automatically generated by the database system
        // and returned as from the insert method call.
        long id = db.insert( CountriesDBHelper.TABLE_Quiz, null, values );

        // store the id (the primary key) in the Quiz instance, as it is now persistent
        quiz.setId( id );

        return quiz;
    }
}
